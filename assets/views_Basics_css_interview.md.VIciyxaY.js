import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.Dnp7cN4M.js";const b=JSON.parse('{"title":"css 常见面试题","description":"","frontmatter":{},"headers":[],"relativePath":"views/Basics/css/interview.md","filePath":"views/Basics/css/interview.md","lastUpdated":1724061393000}'),l={name:"views/Basics/css/interview.md"},i=e(`<h1 id="css-常见面试题" tabindex="-1">css 常见面试题 <a class="header-anchor" href="#css-常见面试题" aria-label="Permalink to &quot;css 常见面试题&quot;">​</a></h1><h2 id="css-中隐藏元素的方法有哪些" tabindex="-1">css 中隐藏元素的方法有哪些 <a class="header-anchor" href="#css-中隐藏元素的方法有哪些" aria-label="Permalink to &quot;css 中隐藏元素的方法有哪些&quot;">​</a></h2><ul><li><ol><li>disaplay:none; 完全一处元素，使其不占任何空间，也不会在文档流中占据位置，元素及其所有字元素都不会显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      display:none;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li><li><ol start="2"><li>visibility:hidden; 元素隐藏，但仍然占据空间，元素在文档流中仍然占据位置，元素及其所有字元素都不会显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      visibility:hidden;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="3"><li>opacity:0; 元素隐藏，但仍然占据空间，元素在文档流中仍然占据位置，元素及其所有字元素都会显示，但完全透明</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      opacity:0;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="4"><li>position:absolute; 将元素移出文档流，使其不占据空间，但仍然显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      position:absolute;</span></span>
<span class="line"><span>      left:-9999px;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="5"><li>height:0;overflow:hidden; 将元素的高度设为 0，并设置 overflow:hidden，使其内容不显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      height:0;</span></span>
<span class="line"><span>      overflow:hidden;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="6"><li>clip-path: polygon(0 0, 0 0, 0 0, 0 0); 将元素裁剪为 0，使其不显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      clip-path: polygon(0 0, 0 0, 0 0, 0 0);</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="7"><li>transform:scale(0); 将元素缩放为 0，使其不显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      transform:scale(0);</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="8"><li>filter:blur(0); 将元素模糊为 0，使其不显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      filter:blur(0);</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="9"><li>z-index:-1; 将元素的 z-index 设为-1，使其在所有其他元素下方，使其不显示</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      z-index:-1;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="10"><li>pointer-events:none; 将元素的 pointer-events 设为 none，使其无法被点击</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      pointer-events:none;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li></ul><h2 id="css-中如何实现水平居中" tabindex="-1">css 中如何实现水平居中 <a class="header-anchor" href="#css-中如何实现水平居中" aria-label="Permalink to &quot;css 中如何实现水平居中&quot;">​</a></h2><ul><li><ol><li>text-align:center; 将元素的 text-align 属性设为 center，使其内容水平居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      text-align:center;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="2"><li>margin:0 auto; 将元素的左右 margin 设为 auto，使其水平居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>        margin:0 auto;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="3"><li>transform:translateX(-50%); 将元素的 transform 属性设为 translateX(-50%)，使其水平居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.element{</span></span>
<span class="line"><span>    transform:translateX(-50%);</span></span>
<span class="line"><span>  }</span></span></code></pre></div></li><li><ol start="4"><li>flexbox 使用 flexbox 布局，将元素的 display 属性设为 flex，将 justify-content 属性设为 center，使其内容水平居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      display:flex;</span></span>
<span class="line"><span>      justify-content:center;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="5"><li>grid 使用 grid 布局，将元素的 display 属性设为 grid，将 justify-content 属性设为 center，使其内容水平居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      justify-content:center;</span></span>
<span class="line"><span>  }</span></span></code></pre></div></li></ul><h2 id="css-会阻塞-dom-解析吗" tabindex="-1">css 会阻塞 DOM 解析吗？ <a class="header-anchor" href="#css-会阻塞-dom-解析吗" aria-label="Permalink to &quot;css 会阻塞 DOM 解析吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞 DOM 解析。</p><h2 id="css-会阻塞-js-解析吗" tabindex="-1">css 会阻塞 js 解析吗？ <a class="header-anchor" href="#css-会阻塞-js-解析吗" aria-label="Permalink to &quot;css 会阻塞 js 解析吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞 js 解析。</p><h2 id="css-会阻塞-js-执行吗" tabindex="-1">css 会阻塞 js 执行吗？ <a class="header-anchor" href="#css-会阻塞-js-执行吗" aria-label="Permalink to &quot;css 会阻塞 js 执行吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞 js 执行。</p><h2 id="css-会阻塞页面渲染吗" tabindex="-1">css 会阻塞页面渲染吗？ <a class="header-anchor" href="#css-会阻塞页面渲染吗" aria-label="Permalink to &quot;css 会阻塞页面渲染吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞页面渲染。</p><h2 id="css-会阻塞页面加载吗" tabindex="-1">css 会阻塞页面加载吗？ <a class="header-anchor" href="#css-会阻塞页面加载吗" aria-label="Permalink to &quot;css 会阻塞页面加载吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞页面加载。</p><h2 id="css-会阻塞页面显示吗" tabindex="-1">css 会阻塞页面显示吗？ <a class="header-anchor" href="#css-会阻塞页面显示吗" aria-label="Permalink to &quot;css 会阻塞页面显示吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞页面显示。</p><h2 id="css-会阻塞页面加载吗-1" tabindex="-1">css 会阻塞页面加载吗？ <a class="header-anchor" href="#css-会阻塞页面加载吗-1" aria-label="Permalink to &quot;css 会阻塞页面加载吗？&quot;">​</a></h2><p>不会，css 是异步加载的，不会阻塞页面加载。</p><h2 id="css-中的-display-属性有哪些值" tabindex="-1">css 中的 display 属性有哪些值？ <a class="header-anchor" href="#css-中的-display-属性有哪些值" aria-label="Permalink to &quot;css 中的 display 属性有哪些值？&quot;">​</a></h2><ol><li>block：块级元素，独占一行，宽度为父元素的宽度，高度为内容高度。</li><li>inline：行内元素，在一行中显示，宽度为内容宽度，高度为内容高度。</li><li>inline-block：行内块元素，在一行中显示，宽度为内容宽度，高度为内容高度。</li><li>none：隐藏元素，不占空间，也不在文档流中。</li><li>flex: 元素变成弹性容器</li><li>grid: 元素变成网格容器</li><li>inline-flex: 元素变成行内弹性容器</li><li>inline-grid: 元素变成行内网格容器</li><li>table: 元素变成表格</li><li>inline-table: 元素变成行内表格</li><li>table-row: 元素变成表格行</li><li>table-cell: 元素变成表格单元格</li><li>table-caption: 元素变成表格标题</li><li>list-item: 元素变成列表项</li><li>table-row-group: 元素变成表格行组</li><li>table-header-group: 元素变成表格表头组</li></ol><h2 id="css-属性计算-calc" tabindex="-1">css 属性计算 - calc <a class="header-anchor" href="#css-属性计算-calc" aria-label="Permalink to &quot;css 属性计算 - calc&quot;">​</a></h2><ul><li><ol><li>基础运算 ：可以执行加（+）减（-）乘（*）除（/）四则运算，并且可以执行括号运算。</li></ol></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.element{</span></span>
<span class="line"><span>   width: calc(100% - 200px);</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><ol start="2"><li>混合单位</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.element{</span></span>
<span class="line"><span>    width: calc(100px + 200px);</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ul><h2 id="px-如何转换成-rem" tabindex="-1">px 如何转换成 rem <a class="header-anchor" href="#px-如何转换成-rem" aria-label="Permalink to &quot;px 如何转换成 rem&quot;">​</a></h2><p>：：： px 是一个固定的单位，rem 是一个相对单位，rem 是相对于根元素的字体大小，所以 px 可以转换成 rem，rem 可以转换成 px。 ：：：</p><ul><li><ol><li>使用 css 预处理器 scss</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@function px2rem($px) {</span></span>
<span class="line"><span>  @return $px / 16 * 1rem;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ul><p>less</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@function px2rem($px) {</span></span>
<span class="line"><span>  @return $px / 16 * 1rem;</span></span>
<span class="line"><span>}</span></span></code></pre></div><ul><li><ol start="2"><li>使用 js</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>function px2rem(px) {</span></span>
<span class="line"><span>  return px / 16 * 1rem;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li><li><ol start="3"><li>s 使用构建工具 （webpack） 例如 postcss-pxtorem 插件,他可以在构建过程中自动将 px 转换成 rem</li></ol></li></ul><h2 id="如何实现垂直居中" tabindex="-1">如何实现垂直居中 <a class="header-anchor" href="#如何实现垂直居中" aria-label="Permalink to &quot;如何实现垂直居中&quot;">​</a></h2><ul><li><ol><li>flexbox 使用 flexbox 布局，将元素的 display 属性设为 flex，将 align-items 属性设为 center，使其内容垂直居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      display:flex;</span></span>
<span class="line"><span>      align-items:center;</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="2"><li>transform:translateY(-50%); 将元素的 transform 属性设为 translateY(-50%)，使其内容垂直居中</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  .element{</span></span>
<span class="line"><span>      transform:translateY(-50%);</span></span>
<span class="line"><span>    }</span></span></code></pre></div></li><li><ol start="3"><li>grid 使用 grid 布局，将元素的 display 属性设为 grid，将 align-items 属性设为 center，使其内容垂直居中。<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>.element{</span></span>
<span class="line"><span>display:grid;</span></span>
<span class="line"><span>align-items:center;</span></span>
<span class="line"><span>}</span></span></code></pre></div></li></ol></li></ul><h2 id="css-实现打字机效果" tabindex="-1">css 实现打字机效果 <a class="header-anchor" href="#css-实现打字机效果" aria-label="Permalink to &quot;css 实现打字机效果&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> &lt;style&gt;</span></span>
<span class="line"><span>    .typing {</span></span>
<span class="line"><span>      width: 100%;</span></span>
<span class="line"><span>      white-space: nowrap;</span></span>
<span class="line"><span>      overflow: hidden;</span></span>
<span class="line"><span>      border-right: .15em solid orange;</span></span>
<span class="line"><span>      animation:</span></span>
<span class="line"><span>        typing 3.5s steps(40, end),</span></span>
<span class="line"><span>        blink-caret .75s step-end infinite;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @keyframes typing {</span></span>
<span class="line"><span>      from { width: 0 }</span></span>
<span class="line"><span>      to { width: 100% }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @keyframes blink-caret {</span></span>
<span class="line"><span>      from, to { border-color: transparent }</span></span>
<span class="line"><span>      50% { border-color: orange }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  &lt;/style&gt;</span></span></code></pre></div>`,35),p=[i];function t(c,o,d,r,h,u){return n(),a("div",null,p)}const v=s(l,[["render",t]]);export{b as __pageData,v as default};
